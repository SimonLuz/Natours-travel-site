.header {
	height: 85vh;
	background-image: linear-gradient(
		to right bottom, 
		rgba($color-primary-light, 0.75), 
		rgba($color-primary-dark, 0.75)), 
		url(../img/hero-small.jpg);
/* Only SCSS file can take a variable in rgba */
	background-size: cover;
	background-position: top;
	position: relative;
    
// FEATURE QUERY (clip-path not supported in firefox!!!)
    @supports (-webkit-clip-path: polygon(0% 0% ,100% 0%, 100% 80vh, 0% 100%)) or
        (clip-path: polygon(0% 0% ,100% 0%, 100% 80vh, 0% 100%)) {
            -webkit-clip-path: polygon(0% 0% ,100% 0%, 100% 80vh, 0% 100%);
            clip-path: polygon(0% 0% ,100% 0%, 100% 80vh, 0% 100%);
            height: 95vh;
    }
    
    
// MEDIA QUERY for RESPONSIVE CSS Background Images:
    @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
        only screen and (-webkit-min-device-pixel-ration: 2) and (min-width: 37.5em), // SAFARI needs webkit and different syntax
        only screen and(min-width: 125em) { // IF THE res. is higher than 192dpi AND min-width of a display is 600px, or if it's more than 2000px...
        background-image: linear-gradient(
            to right bottom, 		
            rgba($color-primary-light, 0.75), 
            rgba($color-primary-dark, 0.75)), 
            url(../img/hero.jpg);
// For testing purposes change bgrd-color here
    }
    
    @include respond(phone) {
        -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 90vh, 0% 100%);
        clip-path: polygon(0% 0%, 100% 0%, 100% 90vh, 0% 100%);
    }
    
    &__logo-box {
	position: absolute;
	top: 4rem;
	left: 4rem;
    }

    &__logo {
        height: 3.5rem;
    }

    &__logo:hover {
        transform: translateY(-3px);
        box-shadow: .1rem 1rem 2rem rgba($color-black, .3);
    }

    &__logo:active {
        transform: translateY(-1px);
        box-shadow: 0px 5px 10px rgba($color-black, .3);
    }

    /* ANIMATIONS CAN be applied to :hover */
    &__logo:hover {
       animation: moveInRight 2s ease-out;	
    }
    
     &__text-box {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-40%, -50%);
        text-align: center;
         
         @include respond(tab-port) {
             transform: translate(-50%, -50%);
         }
         
         @include respond(phone) {
             transform: translate(-50%, -50%);
         }
         
    }
}
